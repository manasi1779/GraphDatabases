import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;

import static org.neo4j.graphdb.Label.label;

import org.neo4j.graphdb.GraphDatabaseService;
import org.neo4j.graphdb.Label;
import org.neo4j.graphdb.Transaction;
import org.neo4j.unsafe.batchinsert.BatchInserter;
import org.neo4j.unsafe.batchinsert.BatchInserters;



public class ProteinSubGraphMatching {
	
	String dbpath;
	GraphDatabaseService db;
	Transaction tx;
	BatchInserter insert;

	public static void main(String[] args) {
		
	}
	
	public ProteinSubGraphMatching(){
		dbpath = "D:/neo4j-enterprise-3.1.1-windows/neo4j-enterprise-3.1.1/data/databases/graph.db";
	}
	
	public void loadData(){
		ClassLoader classLoader = getClass().getClassLoader();
		File file = new File(classLoader.getResource("proteinGraph").getFile());
	}

	public void listFilesForFolder(final File folder) {
	    for(final File fileEntry : folder.listFiles()){
	    	loadFile(fileEntry);
	    }
	}
	
	public void loadFile(File fileName){
		String newDir = fileName.getName().substring(0, fileName.getName().length()-4); 
		newDir = dbpath+"/"+newDir;
		File dir = new File(newDir);		
		dir.mkdir();
		insertProteinData(fileName, dir);
	}	
	
	public void insertProteinData(File fileName, File dbPath){
		try(Scanner scanner = new Scanner(fileName)){
			int noOfNodes = scanner.nextInt();
			insert = BatchInserters.inserter(dbPath);
			for(int i = 0; i < noOfNodes; i++){
				String line = scanner.nextLine();
				String[] values = line.split(" ");
				insert.createNode(Integer.parseInt(values[0]), null, Atoms.getAtomLabel(values[1]));
			}			
			createRelationships(scanner, noOfNodes);
			insert.shutdown();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}		
	}
	
	public void insertiGraphData(File fileName, File dbPath){
		try(Scanner scanner = new Scanner(fileName)){
			int noOfNodes = scanner.nextInt();
			insert = BatchInserters.inserter(dbPath);
			for(int i = 0; i < noOfNodes; i++){
				String line = scanner.nextLine();
				String[] values = line.split(" ");
				Label[] labels = null;
				for(int j = 0; j < values.length-1; j++){
					labels[j] = Label.label(values[j+2]);
				}				 
				insert.createNode(Long.parseLong(values[0]), null, labels);			
			}			
			createRelationships(scanner, noOfNodes);
			insert.shutdown();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}	
	}		
	
	public void createRelationships(Scanner s, int nodes){
		int nofOfEdges
	}	
}
